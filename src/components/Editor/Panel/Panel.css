:root {
    --panel-font-size: 12px;
    --panel-collar: 10px;
}

.Panel {
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    font-size: var(--panel-font-size);
    padding: 5px;
    border-radius: 10px;
    border: 2px solid var(--border);
    position: absolute;
    z-index: 1;
    background-color: var(--panel-background);
    background: linear-gradient(180deg, var(--panel-highlight) 0px, var(--panel-background) 20px);
    user-select: none;
}

.Panel .Title {
    display: inline-block;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    line-height: calc(var(--panel-font-size));
    height: calc(var(--panel-font-size) + 5);
    width: 100%;
    text-align: left;
    padding-bottom: 3px;
    user-select: none;
    margin-bottom: 4px;
    cursor: move;
}

.Panel .Title .TitleText {}

.Panel .Title .Chevron {
    display: inline-block;
    padding-right: 5px;
    padding-left: 5px;
    transition: transform 1s;
    transform: rotate(90deg);
    cursor: pointer;
}

.Panel.Collapsed .Title .Chevron {
    transform: rotate(0deg);
}

.Panel.Collapsed {
    padding: 3px;
    width: 120px !important;
    height: 22px !important;
    min-height: 22px !important;
}

.Panel.Collapsed .Title {
    line-height: calc(var(--panel-font-size));
    height: calc(var(--panel-font-size));
    margin-bottom: 0px;
}

.Panel .Input {
    text-align: left;
}

.Panel .Output {
    text-align: right;
}

.Panel .Row {
    display: flex;
    flex-wrap: wrap;
}

.Panel .Resizer {
    opacity: .3;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-end;
    cursor: nwse-resize;
}

.Panel .Resizer .Handle {
    width: auto;
    display: flex;
    justify-content: flex-end;
    flex-direction: column;
    margin-top: 4px;
}

.Panel .Item {
    line-height: var(--item-text-size);
    font-size: var(--item-text-size);
    flex-grow: 1;
    vertical-align: baseline;
    margin-bottom: 5px;
    cursor: default;
}

.Panel .InteractiveItem {
    line-height: var(--item-text-size);
    font-size: var(--item-text-size);
    flex-grow: 1;
    flex: 1 2;
    vertical-align: baseline;
    margin-bottom: 5px;
}

.Panel .InteractiveItem input:focus {
    background-color: ivory;
}

.Panel .InteractiveItem input {
    width: 100%;
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
    height: 24px;
}

.Panel .Button {
    width: 100%;
    border-radius: 5px;
    background-color: var(--panel-highlight);
    border: none;
    color: var(--main-highlight);
}

.Panel .InputEndpoint {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: var(--border);
    border-radius: calc(0.5em);
    border: 1px solid var(--border);
    margin-left: -1.1em;
    margin-right: 0.3em;
    margin-top: -1px;
    user-select: none;
    text-align: center;
}

.Panel .OutputEndpoint {
    display: inline-block;
    width: 1em;
    height: 1em;
    background-color: var(--border);
    border-radius: 0.5em;
    border: 1px solid var(--border);
    margin-right: -1.1em;
    margin-left: 0.3em;
    margin-top: -1px;
    user-select: none;
    text-align: center;
}

.Panel .InputEndpoint.Signal-Value,
.Panel .OutputEndpoint.Signal-Value {
    color: var(--connection-value-hl);
}

.Panel .InputEndpoint.Signal-Pulse,
.Panel .OutputEndpoint.Signal-Pulse {
    color: var(--connection-pulse-hl);
}

.Panel .InputEndpoint.Signal-Stream,
.Panel .OutputEndpoint.Signal-Stream {
    color: var(--connection-stream-hl);
}

.Panel .Connected.Signal-Value,
.Panel .Multiconnect.Signal-Value {
    background-color: var(--connection-value);
    border: 1px solid var(--connection-value);
    color: var(--main-highlight);
}

.Panel .Connected.Signal-Pulse,
.Panel .Multiconnect.Signal-Pulse {
    background-color: var(--connection-pulse);
    border: 1px solid var(--connection-pulse);
    color: var(--main-highlight);
}

.Panel .Connected.Signal-Stream,
.Panel .Multiconnect.Signal-Stream {
    background-color: var(--connection-stream);
    border: 1px solid var(--connection-stream);
    color: var(--main-highlight);
}

.Panel .Connected.Signal-Value:hover,
.Panel .Multiconnect.Signal-Value:hover {
    background-color: var(--connection-value-hl);
    border: 1px solid var(--connection-value-hl);
}

.Panel .Connected.Signal-Pulse:hover,
.Panel .Multiconnect.Signal-Pulse:hover {
    background-color: var(--connection-pulse-hl);
    border: 1px solid var(--connection-pulse-hl);
}

.Panel .Connected.Signal-Stream:hover,
.Panel .Multiconnect.Signal-Stream:hover {
    background-color: var(--connection-stream-hl);
    border: 1px solid var(--connection-stream-hl);
}

.Panel.Selected .InputEndpoint:not(.Connected):not(.Multiconnect):not(.Hovering):hover,
.Panel.Selected .OutputEndpoint:not(.Connected):not(.Multiconnect):not(.Hovering):hover
.Panel .InputEndpoint.Hovering,
.Panel .OutputEndpoint.Hovering,
.Panel .InputEndpoint.Connecting,
.Panel .OutputEndpoint.Connecting,
.Panel .InputEndpoint:not(.Connected):not(.Multiconnect):hover,
.Panel .OutputEndpoint:not(.Connected):not(.Multiconnect):hover {
    background-color: var(--main-highlight);
    border: 1px solid var(--main-highlight);
    color: black;
}

.Panel.Selected {
    border: 2px solid var(--selection);
    background: linear-gradient(180deg, var(--selection-highlight) 0%, var(--selection-lowlight) 20%);
}

.Panel.Selected .InputEndpoint:not(.Connected):not(.Multiconnect):not(.Hovering),
.Panel.Selected .OutputEndpoint:not(.Connected):not(.Multiconnect):not(.Hovering) {
    border: 1px solid var(--selection);
    background-color: var(--selection);
}

.Panel.Selected .Button {
    background-color: var(--selection-highlight);
}

.Panel.Focused {
    box-shadow: 0px 0px 20px 2px rgba(127, 127, 127, .5);
}

.Panel .Item {
    flex-grow: 1;
    flex: 1 2 0px;
    min-width: 0px;
}

.Panel .Item input {
    font-size: 10px;
    line-height: 10px;
    height: 13px;
    width: calc(100% - 1.5em);
    border-radius: 5px;
    border: none;
    padding: 0px 5px;
    color: var(--main-highlight);
    background-color: var(--background);
}
